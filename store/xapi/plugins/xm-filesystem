#!/usr/bin/env python

import os
import simplejson as json
import XenAPIPlugin
import stat

def browse( session, args ):
	files = []
	folder = "/"
	if( "folder" in args ):
		folder = args["folder"]

	filenames = os.listdir( folder )
	for file in filenames:
		try:
			files.append({
				"path": file,
				"dir": stat.S_ISDIR( os.stat( folder + "/" + file ).st_mode )
			})
		except OSError:
			pass

	return json.dumps(files)

def disks( session, args ):
	disks = []
	devices = os.listdir( "/dev/" )
	
	for dev in devices:
		if( dev.startswith( "sd" ) or dev.startswith( "hd" ) or dev.startswith( "md" ) ):
			disks.append( dev );

	return json.dumps(disks)
	
def get_boot( name ):
	matches = []
	boot_files = os.listdir("/boot/")
	
	for f in boot_files:
		if( f.startswith( name ) ):
			matches.append( "/boot/" + f )
			
	return matches
	
def kernels( session, args ):
	return json.dumps(get_boot("vmlinuz-"))
	
def ramdisks( session, args ):
	return json.dumps(get_boot("initrd"))

if __name__ == "__main__":
	XenAPIPlugin.dispatch({
		"browse":	browse,
		"disks":	disks,
		"kernels":	kernels,
		"ramdisks":	ramdisks
	})
